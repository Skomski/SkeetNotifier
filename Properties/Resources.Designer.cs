//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.454
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SkeetNotifier.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SkeetNotifier.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap Accepted {
            get {
                object obj = ResourceManager.GetObject("Accepted", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://api.stackoverflow.com/1.1/users/22656/answers.
        /// </summary>
        internal static string APIUri {
            get {
                return ResourceManager.GetString("APIUri", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap AutoStart {
            get {
                object obj = ResourceManager.GetObject("AutoStart", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Exit {
            get {
                object obj = ResourceManager.GetObject("Exit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon Icon {
            get {
                object obj = ResourceManager.GetObject("Icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://stackoverflow.com/questions/.
        /// </summary>
        internal static string QuestionUri {
            get {
                return ResourceManager.GetString("QuestionUri", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Refresh {
            get {
                object obj = ResourceManager.GetObject("Refresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jon Skeet doesn&apos;t have performance bottlenecks. He just makes the universe wait its turn..
        /// </summary>
        internal static string SkeetFactFriday {
            get {
                return ResourceManager.GetString("SkeetFactFriday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jon Skeet is immutable. If something&apos;s going to change, it&apos;s going to have to be the rest of the universe..
        /// </summary>
        internal static string SkeetFactMonday {
            get {
                return ResourceManager.GetString("SkeetFactMonday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The only person to have ranked higher than Jon Skeet in the SO all-time rep league is Jon Skeet..
        /// </summary>
        internal static string SkeetFactSaturday {
            get {
                return ResourceManager.GetString("SkeetFactSaturday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users don&apos;t mark Jon Skeet&apos;s answers as accepted. The universe accepts them out of a sense of truth and justice..
        /// </summary>
        internal static string SkeetFactSunday {
            get {
                return ResourceManager.GetString("SkeetFactSunday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jon Skeet&apos;s code doesn&apos;t follow a coding convention. It is the coding convention..
        /// </summary>
        internal static string SkeetFactThursday {
            get {
                return ResourceManager.GetString("SkeetFactThursday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jon Skeet&apos;s addition operator doesn&apos;t commute - it teleports to where he needs it to be..
        /// </summary>
        internal static string SkeetFactTuesday {
            get {
                return ResourceManager.GetString("SkeetFactTuesday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous methods and anonymous types are really all called Jon Skeet. They just don&apos;t like to boast..
        /// </summary>
        internal static string SkeetFactWednesday {
            get {
                return ResourceManager.GetString("SkeetFactWednesday", resourceCulture);
            }
        }
    }
}
